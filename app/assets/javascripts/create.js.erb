
<% 
# This file is for displaying search results from user input in plant creation.
# Should update a text_fields suggestions with displayed names from a search.
# This allows the following searches first result to be the intended location.

# https://nominatim.openstreetmap.org/search/<query>?<params>
# https://nominatim.openstreetmap.org/search?q=17+Strada+Pictor+Alexandru+Romano%2C+Bukarest&format=geojson
%>

function search_locations() {
  Rails.ajax({
    <%# Ajax request from controller method get_gecode%>
    url: "/get_geocode_results?string=" + Rails.$(".location_field")[1].value,
    type: "get",
    success:  function retData(data){
      <%# Split returned array %>
      results_array = data.split("|")

      <%# Assign location field as first in class ".location_field" %>
      location_field = Rails.$(".location_field")[0]

      <%# Create array of HTML links (<a> tags) %>
      links = [ 
      document.createElement("A"), 
      document.createElement("A"), 
      document.createElement("A"), 
      document.createElement("A")
      ]

      <%# add "suggest" class to location field (removes bottom curved corners) %>
      location_field.classList.add("suggest")

      <%# Check if child elements exist for creation or edit %>
      if(Rails.$(".location_field")[0].childElementCount>5){
        remove_links("location_field", "location_suggest")
      }
      for (i=0;i<4;i++) {
        links[i].className = "location_suggest-"+i
        links[i].innerHTML = results_array[i];
        links[i].onclick = function() { 
          Rails.$(".location_field")[1].value = this.innerHTML;
          remove_links("location_field", "location_suggest")
           }
      }
      
      <%# Append/create only as many that exist %>
      for (i=0;i<4&&results_array[i]!=null;i++) {
          if (results_array[i].length > 0) { Rails.$(".location_field")[0].appendChild(links[i]); }
      }
    }
    <%# END Success Function %>
  })
  <%# END Ajax %>
} 

<%# Remove Elements upon clicking one %>
function remove_links(field, suggests) {
    Rails.$("."+field)[1].classList.remove("suggest")
    for(i=0;i<Rails.$("."+field)[0].childElementCount+1;++i){
      if (Rails.$("."+suggests+'-'+i)[0]!=null){
        Rails.$("."+suggests+'-'+i)[0].remove()
        
      }
    }
}

function search_species(){
  Rails.ajax({
    <%# Ajax request from controller method get_spec%>
    url: "/get_spec_results?toSearch=" + Rails.$(".species_field")[1].value,
    type: "get",
    success:  function retData(data){
      <%# Split returned array %>
      hold_array = data.split("|")
      final_array = []
      for(i=0;i<hold_array.length;++i){
        check_array = hold_array[i].split(',')
        final_array[i] = check_array
      }
      
      <%# Assign species field as first in class ".species_field" %>
      species_field = Rails.$(".species_field")[0]

      <%# Create array of HTML links (<a> tags) %>
      links = [ document.createElement("A"), document.createElement("A"), document.createElement("A"), document.createElement("A") ]

      <%# add "suggest" class to species field (removes bottom curved corners) %>
      species_field.classList.add("suggest")

      <%# Check if child elements exist for creation or edit %>
      if(Rails.$(".species_field")[0].childElementCount>5){
        remove_links("species_field","species_suggest")
      }
      for (i=0;i<4&&final_array[i];++i) {
        links[i].className = "species_suggest-"+i
        links[i].innerHTML = final_array[i][0]
      }
      links[0].addEventListener("click" , function(){
        delegate(0, final_array[0][2], links[0].innerHTML)
      })
      links[1].addEventListener("click" , function(){
        delegate(1, final_array[1][2], links[1].innerHTML)
      })
      links[2].addEventListener("click" , function(){
        delegate(2, final_array[2][2], links[2].innerHTML)
      })
      links[3].addEventListener("click" , function(){
        delegate(3, final_array[3][2], links[3].innerHTML)
      })
      <%# Append/create only as many that exist %>
      for (i=0;i<4&&final_array[i]!=null;i++) {
          if (final_array[i].length > 0) { Rails.$(".species_field")[0].appendChild(links[i]); }
      }
    }
    <%# END Success Function %>
  })
  <%# END Ajax %>
  }

function delegate(clickedId, plantId, textToFill){
  Rails.$(".species_field")[1].value =  textToFill
  remove_links("species_field", "species_suggest")
  fillFields(plantId)
}

function fillFields(id){
  Rails.ajax({
    <%# Ajax request from controller method get_plant %>
    url: "/get_plants?id="+ id,
    type: "get",
    success:  function retData(data){
      result = data.split('|')
      if(result[0]!=null){
        document.getElementById("plant_daily_water").value = result[0]
      }else{
        document.getElementById("plant_daily_water").value - ""
      }
      if(result[1]!=null){
        document.getElementById("plant_daily_light").value = result[1]
      }else{
        document.getElementById("plant_daily_light").value = ""
      }
      <%# END Success Function %>
    }
    <%# END Ajax %>
  })
  }